from aiogram import Router, F
from aiogram.types import CallbackQuery
from aiogram import Bot
from database import connect

from keyboards.client_kb import get_client_menu

staff_router = Router()

@staff_router.callback_query(F.data.startswith("purchase_confirm:"))
async def confirm_purchase(callback: CallbackQuery, bot: Bot):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ inline-–∫–Ω–æ–ø–∫–∏ '–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ø–æ–∫—É–ø–∫—É' (purchase_confirm).
    –ü–æ–ª—É—á–∞–µ—Ç –∫–æ–¥ –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–∞–ª–ª–æ–≤ –∏–∑ callback_data.
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ç–∞–∫–æ–π –∫–æ–¥ –∏ –Ω–µ –±—ã–ª –ª–∏ –æ–Ω —É–∂–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω.
    –ï—Å–ª–∏ –≤—Å—ë –≤ –ø–æ—Ä—è–¥–∫–µ:
    - –ü–æ–º–µ—á–∞–µ—Ç –∫–æ–¥ –∫–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã–π
    - –ù–∞—á–∏—Å–ª—è–µ—Ç –±–∞–ª–ª—ã –∫–ª–∏–µ–Ω—Ç—É
    - –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç—É
    - –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–∞—Å—Å–∏—Ä–∞
    """
    _, code, points = callback.data.split(':')
    staff_id = callback.from_user.id

    with connect() as conn:
        cur = conn.cursor()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω –ª–∏ –∫–æ–¥
        cur.execute("""
            SELECT used, user_id 
            FROM purchase_codes 
            WHERE code = ?
        """, (code,))
        result = cur.fetchone()
        
        if not result:
            await callback.answer("‚ùå –ö–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω!")
            return
            
        is_used, client_id = result
        if is_used:
            await callback.answer("‚ö†Ô∏è –≠—Ç–æ—Ç –∫–æ–¥ —É–∂–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω!")
            return
            
        # –ü–æ–º–µ—á–∞–µ–º –∫–æ–¥ –∫–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã–π
        cur.execute("""
            UPDATE purchase_codes 
            SET used = 1 
            WHERE code = ?
        """, (code,))
        
        # –ù–∞—á–∏—Å–ª—è–µ–º –±–∞–ª–ª—ã –∫–ª–∏–µ–Ω—Ç—É
        cur.execute("""
            UPDATE clients 
            SET points = points + ? 
            WHERE user_id = ?
        """, (int(points), client_id))
        
        conn.commit()

    # –£–≤–µ–¥–æ–º–ª—è–µ–º –∫–ª–∏–µ–Ω—Ç–∞
    await bot.send_message(
        client_id,
        f"‚úÖ –í–∞–º –Ω–∞—á–∏—Å–ª–µ–Ω–æ {points} –±–∞–ª–ª–æ–≤!",
        reply_markup=get_client_menu()
    )
    
    await callback.message.edit_text(
        f"üü¢ –ö–æ–¥ {code} –ø–æ–¥—Ç–≤–µ—Ä–∂–¥—ë–Ω!",
        reply_markup=None
    )

@staff_router.callback_query(F.data.startswith("spend_confirm:"))
async def confirm_spend(callback: CallbackQuery, bot: Bot):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ inline-–∫–Ω–æ–ø–∫–∏ '–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å —Å–ø–∏—Å–∞–Ω–∏–µ' (spend_confirm:)
    –ü–æ–ª—É—á–∞–µ—Ç –∫–æ–¥ –∏ —Å—Ç–æ–∏–º–æ—Å—Ç—å –∏–∑ callback_data
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –Ω–µ –±—ã–ª –ª–∏ —É–∂–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω —ç—Ç–æ—Ç –∫–æ–¥
    –ï—Å–ª–∏ –≤—Å—ë –≤ –ø–æ—Ä—è–¥–∫–µ ‚Äî —Å–ø–∏—Å—ã–≤–∞–µ—Ç –±–∞–ª–ª—ã —É –∫–ª–∏–µ–Ω—Ç–∞
    –£–≤–µ–¥–æ–º–ª—è–µ—Ç –∫–ª–∏–µ–Ω—Ç–∞ –∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–∞—Å—Å–∏—Ä–∞
    """
    _, code, cost = callback.data.split(':')
    cost = int(cost)

    # –ü–æ–º–µ—á–∞–µ–º –∫–æ–¥ –∫–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã–π, –µ—Å–ª–∏ –æ–Ω –µ—â—ë –Ω–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω
    with connect() as conn:
        cur = conn.cursor()
        cur.execute("""
            UPDATE spend_codes 
            SET used = 1 
            WHERE code = ? AND used = 0
            RETURNING user_id
        """, (code,))
        result = cur.fetchone()

        if result:
            user_id = result[0]
            cur.execute("UPDATE clients SET points = points - ? WHERE user_id = ? AND points >= ?", 
                       (cost, user_id, cost))
            conn.commit()
            await bot.send_message(user_id, f"üí∏ –°–ø–∏—Å–∞–Ω–æ {cost} –±–∞–ª–ª–æ–≤")
            await callback.message.edit_text("‚úÖ –°–ø–∏—Å–∞–Ω–∏–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ", reply_markup=None)
        else:
            await callback.message.edit_text("‚ùå –ö–æ–¥ —É–∂–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω")


@staff_router.callback_query(F.data.startswith(("purchase_reject:", "spend_reject:")))
async def reject_code(callback: CallbackQuery, bot: Bot):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ inline-–∫–Ω–æ–ø–∫–∏ '–û—Ç–º–µ–Ω–∏—Ç—å' –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –ø–æ–∫—É–ø–∫–∏ –∏–ª–∏ —Å–ø–∏—Å–∞–Ω–∏—è
    –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –¥–≤–∞ —Ç–∏–ø–∞ —Å–æ–±—ã—Ç–∏–π: purchase_reject –∏ spend_reject
    –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Ç–∏–ø –æ–ø–µ—Ä–∞—Ü–∏–∏, –Ω–∞—Ö–æ–¥–∏—Ç –∫–ª–∏–µ–Ω—Ç–∞ –∏ —É–≤–µ–¥–æ–º–ª—è–µ—Ç –µ–≥–æ –æ–± –æ—Ç–º–µ–Ω–µ
    –ü–æ–º–µ—á–∞–µ—Ç –∫–æ–¥ –∫–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã–π, —á—Ç–æ–±—ã –æ–Ω –Ω–µ –º–æ–≥ –±—ã—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω –ø–æ–≤—Ç–æ—Ä–Ω–æ
    """
    # –ü–æ–ª—É—á–∞–µ–º –∫–æ–¥ –∏–∑ callback_data
    _, code = callback.data.split(':')  
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º, —Å –∫–∞–∫–æ–π —Ç–∞–±–ª–∏—Ü–µ–π —Ä–∞–±–æ—Ç–∞–µ–º ‚Äî –Ω–∞—á–∏—Å–ª–µ–Ω–∏–µ –∏–ª–∏ —Å–ø–∏—Å–∞–Ω–∏–µ
    table = "purchase_codes" if "purchase" in callback.data else "spend_codes"
    
    # –ó–∞—â–∏—Ç–∞ –æ—Ç –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –∫–æ–º–∞–Ω–¥
    if table not in ["purchase_codes", "spend_codes"]:
        await callback.answer("‚ùå –ù–µ –≤—ã–π–¥–µ—Ç! üïµÔ∏è")
        return

    # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    with connect() as conn:
        cur = conn.cursor()

        # –ù–∞—Ö–æ–¥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–º—É –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç —ç—Ç–æ—Ç –∫–æ–¥
        cur.execute(f"SELECT user_id FROM {table} WHERE code = ?", (code,))
        result = cur.fetchone() 
        
        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω ‚Äî –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –µ–º—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        if result:
            user_id = result[0] 
            await bot.send_message(user_id, "‚ùå –ö–∞—Å—Å–∏—Ä –æ—Ç–º–µ–Ω–∏–ª –æ–ø–µ—Ä–∞—Ü–∏—é.")
            
            # –ü–æ–º–µ—á–∞–µ–º –∫–æ–¥ –∫–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã–π
            cur.execute(f"UPDATE {table} SET used = 1 WHERE code = ?", (code,))
            conn.commit()
    
    await callback.message.edit_text(
        "‚ùå –û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞",
        reply_markup=None
    )